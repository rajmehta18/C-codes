#include<bits/stdc++.h>
#include<string.h>
#include<vector>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define endl  "\n"
#define ll long long
#define int long long
#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);cin.exceptions(cin.failbit);cout.tie(NULL);
using namespace std;


void findsubset(int reqdx,int reqdy,int k,int sumx,int sumy,vector<pair<int,int> > v,vector<pair<int,int> > temp,int i)
{
	if(i==k)
	return ;
	
	if(reqdx==sumx && reqdy==sumy)
	{
		for(int i=0;i<temp.size();i++)
		{
			cout << temp[i].first << " " << temp[i].second << endl;
		}
		return ;
	}
	
	findsubset(reqdx,reqdy,k,sumx,sumy,v,temp,i+1);	
	temp.push_back({v[i].first,v[i].second});
	findsubset(reqdx,reqdy,k,sumx+v[i].first,sumy+v[i].second,v,temp,i+1);
	
}





int32_t main()
{
	
	int Xa,Ya,Xb,Yb; // coordinates of X and Y
	cin >> Xa >> Ya >> Xb >> Yb;  // taking input
	
	
	int k;    // total no. of vectors 
	cin >> k;
	vector<pair<int,int> > v(k);
	
	for(int i=0;i<k;i++)
	{
		int x,y;   // taking input of k vectors.
		v.push_back({x,y}); 
	}
	
	int reqdx = (Xb-Xa);   // Required sum of B-A in x-coordinate
	int reqdy = (Yb-Ya);   // Required sum of B-A in y-coordinate
	
	vector<pair<int,int> > temp;
	findsubset(reqdx,reqdy,k,0,0,v,temp,0);	
}


